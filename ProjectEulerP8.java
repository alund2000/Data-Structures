public class ProjectEulerP8{
 public static void main (String[] args){

 	String a="73167176531330624919225119674426574742355349194934";
 	String b="96983520312774506326239578318016984801869478851843";
 	String c="85861560789112949495459501737958331952853208805511";
 	String d="12540698747158523863050715693290963295227443043557";
 	String e="66896648950445244523161731856403098711121722383113";
 	String f="62229893423380308135336276614282806444486645238749";
 	String g="30358907296290491560440772390713810515859307960866";
 	String h="70172427121883998797908792274921901699720888093776";
 	String i="65727333001053367881220235421809751254540594752243";
 	String j="52584907711670556013604839586446706324415722155397";
 	String k="53697817977846174064955149290862569321978468622482";
 	String l="83972241375657056057490261407972968652414535100474";
 	String m="82166370484403199890008895243450658541227588666881";
 	String n="16427171479924442928230863465674813919123162824586";
 	String o="17866458359124566529476545682848912883142607690042";
 	String p="24219022671055626321111109370544217506941658960408";
 	String q="07198403850962455444362981230987879927244284909188";
 	String r="84580156166097919133875499200524063689912560717606";
 	String s="05886116467109405077541002256983155200055935729725";
 	String t="71636269561882670428252483600823257530420752963450";

 	System.out.println(greatestProduct(13,a+b+c+d+e+f+g+h+i+j+k+l+m+n+o+p+q+r+s+t));

 }
 //Problem 8: gives the greatest product of q adjacent numbers in a given 1000 digit num
 	public static String greatestProduct(int q, String num){
 		String[] digits=num.split("");
 		double largestProduct=0;
 		for(int i=0;i<num.length()-q;i++){
 			double product=1;
 			for(int j=0;j<q;j++){
 				product*=Integer.parseInt(digits[i+j]);
 			}
 			if(product>largestProduct){
 				largestProduct=product;
 			}
 		}
 		return "The largest product is "+String.format("%,f",largestProduct);
 	}
}